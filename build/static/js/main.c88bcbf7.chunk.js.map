{"version":3,"sources":["Hook/useDarkMode.js","components/Header/Header.js","components/filter/FilterSearch.js","components/MainPage/CountryCard.js","components/MainPage/Loader.js","components/MainPage/MainPage.js","components/MainPage/contryCode.js","components/MainPage/CountryDetail.js","App.js","reportWebVitals.js","index.js"],"names":["useDarkMode","useState","localStorage","theme","setTheme","colorTheme","useEffect","root","window","document","documentElement","classList","remove","add","setItem","Header","className","to","onClick","FilterSearch","value","onChange","onChange2","value2","type","placeholder","name","id","CountryCard","flag","population","region","capital","nativeName","src","alt","Loader","MainPage","countries","setCountries","error","setError","isLoaded","setIsLoaded","filteredData","setFilteredData","query","setQuery","select","setSelect","fetch","then","res","json","data","console","log","flags","svg","message","e","target","event","toLowerCase","result","filter","handleFilter","country","common","includes","map","Math","random","countryListAlpha3","AFG","ALB","DZA","ASM","AND","AGO","AIA","ATA","ATG","ARG","ARM","ABW","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BMU","BTN","BOL","BES","BIH","BWA","BVT","BRA","IOT","BRN","BGR","BFA","BDI","CPV","KHM","CMR","CAN","CYM","CAF","TCD","CHL","CHN","CXR","CCK","COL","COM","COD","COG","COK","CRI","HRV","CUB","CUW","CYP","CZE","CIV","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","SWZ","ETH","FLK","FRO","FJI","FIN","FRA","GUF","PYF","ATF","GAB","GMB","GEO","DEU","GHA","GIB","GRC","GRL","GRD","GLP","GUM","GTM","GGY","GIN","GNB","GUY","HTI","HMD","VAT","HND","HKG","HUN","ISL","IND","IDN","IRN","IRQ","IRL","IMN","ISR","ITA","JAM","JPN","JEY","JOR","KAZ","KEN","KIR","PRK","KOR","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LIE","LTU","LUX","MAC","MDG","MWI","MYS","MDV","MLI","MLT","MHL","MTQ","MRT","MUS","MYT","MEX","FSM","MDA","MCO","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","NCL","NZL","NIC","NER","NGA","NIU","NFK","MNP","NOR","OMN","PAK","PLW","PSE","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","PRI","QAT","MKD","ROU","RUS","RWA","REU","BLM","SHN","KNA","LCA","MAF","SPM","VCT","WSM","SMR","STP","SAU","SEN","SRB","SYC","SLE","SGP","SXM","SVK","SVN","SLB","SOM","ZAF","SGS","SSD","ESP","LKA","SDN","SUR","SJM","SWE","CHE","SYR","TWN","TJK","TZA","THA","TLS","TGO","TKL","TON","TTO","TUN","TUR","TKM","TCA","TUV","UGA","UKR","ARE","GBR","UMI","USA","URY","UZB","VUT","VEN","VNM","VGB","VIR","WLF","ESH","YEM","ZMB","ZWE","ALA","CountryDetail","match","setCountry","setNativeName","SingleData","find","a","params","native","Object","values","subregion","tld","currencies","languages","borders","border","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c88bcbf7.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nexport const useDarkMode = () => {\r\n  const [theme, setTheme] = useState(localStorage.theme)\r\n  const colorTheme = theme === 'dark' ? 'light' : 'dark'\r\n  useEffect(() => {\r\n    const root = window.document.documentElement\r\n    root.classList.remove(colorTheme)\r\n    root.classList.add(theme)\r\n    localStorage.setItem('theme', theme)\r\n  }, [theme, colorTheme])\r\n  return [colorTheme, setTheme]\r\n}\r\n\r\n// export default useDarkMode\r\n","import { Link } from 'react-router-dom'\r\nimport { useDarkMode } from '../../Hook/useDarkMode'\r\nimport './Header.css'\r\nconst Header = () => {\r\n  const [colorTheme, setTheme] = useDarkMode()\r\n  return (\r\n    <div className='dark__mode__gray'>\r\n      <div className='flex justify-between items-center py-5 px-3 md:px-20 text-xs md:text-xl font-bold'>\r\n        <Link to='/rest-countries'>\r\n          <div className=''>\r\n            <h3>Where in the world?</h3>\r\n          </div>\r\n        </Link>\r\n        <div\r\n          className='darkMode cursor-pointer '\r\n          onClick={() => setTheme(colorTheme)}\r\n        >\r\n          {colorTheme === 'dark' ? (\r\n            <button className='px-3 py-2 shadow font-bold'>\r\n              <div className='night'>\r\n                <i className='fas fa-moon'></i> Dark Mode\r\n              </div>\r\n            </button>\r\n          ) : (\r\n            <button className='px-3 py-2 shadow font-bold'>\r\n              <div className='day'>\r\n                <i className='far fa-lightbulb'></i> Light Mode\r\n              </div>\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import './Filter.css'\r\nconst FilterSearch = ({ value, onChange, onChange2, value2 }) => {\r\n  return (\r\n    <div>\r\n      <div className='flex justify-between py-8 px-8 container'>\r\n        <div className='search  flex'>\r\n          <div className='searchSymbol'>\r\n            <i className='fas fa-search dark:text-white'></i>\r\n          </div>\r\n          <input\r\n            className='w-96 pl-12 outline-none rounded-sm dark__mode__gray shadow'\r\n            value={value}\r\n            onChange={onChange}\r\n            type='text'\r\n            placeholder='Search for a country'\r\n          ></input>\r\n        </div>\r\n        <div className='filter dropdown'>\r\n          {/* <label for='country-select'>Filter by Region:</label> */}\r\n\r\n          <select\r\n            name='country'\r\n            className='dark__mode__gray outline-none shadow'\r\n            id='country-select'\r\n            value={value2}\r\n            onChange={onChange2}\r\n          >\r\n            <option value=''> Filter by Region</option>\r\n            <option value='africa'>Africa</option>\r\n            <option value='americas'>Americas</option>\r\n            <option value='asia'>Asia</option>\r\n            <option value='europe'>Europe</option>\r\n            <option value='oceania'>Oceania</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterSearch\r\n","import { Link } from 'react-router-dom'\r\nimport { useDarkMode } from '../../Hook/useDarkMode'\r\nimport './MainPage.css'\r\nconst CountryCard = ({\r\n  flag,\r\n  name,\r\n  population,\r\n  region,\r\n  capital,\r\n  nativeName,\r\n}) => {\r\n  useDarkMode()\r\n  return (\r\n    <div className='card rounded dark__mode__gray shadow'>\r\n      <Link to={`/details/${name}`}>\r\n        <div className='card__image'>\r\n          <img\r\n            src={flag}\r\n            alt={name}\r\n            className='object-cover h-40 w-full rounded shadow'\r\n          />\r\n        </div>\r\n      </Link>\r\n      <div className='card__main mt-4 mx-2 '>\r\n        {/* <h2 className='card__head font-bold text-xl w-48 mx-auto text-left truncate'>\r\n          {name}\r\n        </h2> */}\r\n        <Link to={`/details/${name}`}>\r\n          <p className='card__head ml-2 w-56  truncate'>\r\n            <strong>{name}</strong>\r\n          </p>\r\n        </Link>\r\n        <div className='card__body mx-2 m-4 '>\r\n          <p className='font-bold '>\r\n            Population: <span className='font-medium'> {population}</span>\r\n          </p>\r\n          <p className='font-bold '>\r\n            Region:<span className='font-medium'> {region}</span>\r\n          </p>\r\n          <p className='font-bold '>\r\n            Capital:<span className='font-medium'> {capital}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountryCard\r\n","const Loader = () => {\r\n  return (\r\n    <div className=' w-screen h-screen z-50 overflow-hidden bg-gray-700 opacity-75 flex flex-col items-center justify-center'>\r\n      <div className='loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-12 w-12 mb-4'></div>\r\n      <h2 className='text-center text-white text-xl font-semibold'>\r\n        Loading...\r\n      </h2>\r\n      <p className='w-1/3 text-center text-white'>\r\n        This may take a few seconds, please don't close this page.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport FilterSearch from '../filter/FilterSearch'\r\nimport CountryCard from './CountryCard'\r\nimport Loader from './Loader'\r\n\r\nconst MainPage = () => {\r\n  const [countries, setCountries] = useState([])\r\n  const [error, setError] = useState(null)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [filteredData, setFilteredData] = useState(countries)\r\n  const [query, setQuery] = useState('')\r\n  const [select, setSelect] = useState('')\r\n\r\n  // const [searchParam] = useState(['capital', 'name'])\r\n\r\n  const url = 'https://restcountries.eu/rest/v2/all'\r\n  const url2 = 'https://restcountries.com/v3.1/all'\r\n\r\n  useEffect(() => {\r\n    fetch(url2)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          console.log('🔴', data[2].flags.svg)\r\n          setIsLoaded(true)\r\n          setCountries(data)\r\n          setFilteredData(data)\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true)\r\n          setError(error)\r\n        }\r\n      )\r\n  }, [])\r\n  //search function\r\n  // const handleSearch = (event) => {\r\n  //   let value = event.target.value.toLowerCase()\r\n  //   let result = []\r\n  //   result = countries.filter((data) => {\r\n  //     return data.name.toLowerCase().search(value) !== -1\r\n  //   })\r\n  //   setQuery(setFilteredData(result))\r\n  // }\r\n  const handleFilter = (event) => {\r\n    let value = event.target.value.toLowerCase()\r\n    let result = []\r\n    if (value) {\r\n      result = countries.filter((data) => {\r\n        return data.region.toLowerCase() === value\r\n      })\r\n    } else\r\n      result = countries.filter((data) => {\r\n        return data\r\n      })\r\n    setSelect(setFilteredData(result))\r\n  }\r\n  if (error) {\r\n    return <>{error.message}</>\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <>\r\n        <Loader />\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='dark__mode__black'>\r\n        <FilterSearch\r\n          value={query}\r\n          value2={select}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          onChange2={(e) => handleFilter(e)}\r\n        />\r\n        <div className='mainPage'>\r\n          {filteredData\r\n            .filter((country) => {\r\n              if (query === '') {\r\n                return country\r\n              } else if (\r\n                country.name.common.toLowerCase().includes(query.toLowerCase())\r\n              ) {\r\n                return country\r\n              }\r\n            })\r\n            .map((country) => {\r\n              return (\r\n                <div className='' key={Math.random()}>\r\n                  <CountryCard\r\n                    flag={country.flags.svg}\r\n                    name={country.name.common}\r\n                    // population={country.population}\r\n                    region={country.region}\r\n                    capital={country.capital && country.capital[0]}\r\n                    nativeName={\r\n                      country.name.nativeName && country.name.nativeName.common\r\n                    }\r\n                  />\r\n                </div>\r\n              )\r\n            })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainPage\r\n","// Country names object using 3-letter country codes to reference country name\r\n// ISO 3166 Alpha-3 Format: [3 letter Country Code]: [Country Name]\r\n// Sorted alphabetical by country name (special characters on bottom)\r\nexport const countryListAlpha3 = {\r\n  AFG: 'Afghanistan',\r\n  ALB: 'Albania',\r\n  DZA: 'Algeria',\r\n  ASM: 'American Samoa',\r\n  AND: 'Andorra',\r\n  AGO: 'Angola',\r\n  AIA: 'Anguilla',\r\n  ATA: 'Antarctica',\r\n  ATG: 'Antigua and Barbuda',\r\n  ARG: 'Argentina',\r\n  ARM: 'Armenia',\r\n  ABW: 'Aruba',\r\n  AUS: 'Australia',\r\n  AUT: 'Austria',\r\n  AZE: 'Azerbaijan',\r\n  BHS: 'Bahamas (the)',\r\n  BHR: 'Bahrain',\r\n  BGD: 'Bangladesh',\r\n  BRB: 'Barbados',\r\n  BLR: 'Belarus',\r\n  BEL: 'Belgium',\r\n  BLZ: 'Belize',\r\n  BEN: 'Benin',\r\n  BMU: 'Bermuda',\r\n  BTN: 'Bhutan',\r\n  BOL: 'Bolivia (Plurinational State of)',\r\n  BES: 'Bonaire, Sint Eustatius and Saba',\r\n  BIH: 'Bosnia and Herzegovina',\r\n  BWA: 'Botswana',\r\n  BVT: 'Bouvet Island',\r\n  BRA: 'Brazil',\r\n  IOT: 'British Indian Ocean Territory (the)',\r\n  BRN: 'Brunei Darussalam',\r\n  BGR: 'Bulgaria',\r\n  BFA: 'Burkina Faso',\r\n  BDI: 'Burundi',\r\n  CPV: 'Cabo Verde',\r\n  KHM: 'Cambodia',\r\n  CMR: 'Cameroon',\r\n  CAN: 'Canada',\r\n  CYM: 'Cayman Islands (the)',\r\n  CAF: 'Central African Republic (the)',\r\n  TCD: 'Chad',\r\n  CHL: 'Chile',\r\n  CHN: 'China',\r\n  CXR: 'Christmas Island',\r\n  CCK: 'Cocos (Keeling) Islands (the)',\r\n  COL: 'Colombia',\r\n  COM: 'Comoros (the)',\r\n  COD: 'Congo (the Democratic Republic of the)',\r\n  COG: 'Congo (the)',\r\n  COK: 'Cook Islands (the)',\r\n  CRI: 'Costa Rica',\r\n  HRV: 'Croatia',\r\n  CUB: 'Cuba',\r\n  CUW: 'Curaçao',\r\n  CYP: 'Cyprus',\r\n  CZE: 'Czechia',\r\n  CIV: \"Côte d'Ivoire\",\r\n  DNK: 'Denmark',\r\n  DJI: 'Djibouti',\r\n  DMA: 'Dominica',\r\n  DOM: 'Dominican Republic (the)',\r\n  ECU: 'Ecuador',\r\n  EGY: 'Egypt',\r\n  SLV: 'El Salvador',\r\n  GNQ: 'Equatorial Guinea',\r\n  ERI: 'Eritrea',\r\n  EST: 'Estonia',\r\n  SWZ: 'Eswatini',\r\n  ETH: 'Ethiopia',\r\n  FLK: 'Falkland Islands (the) [Malvinas]',\r\n  FRO: 'Faroe Islands (the)',\r\n  FJI: 'Fiji',\r\n  FIN: 'Finland',\r\n  FRA: 'France',\r\n  GUF: 'French Guiana',\r\n  PYF: 'French Polynesia',\r\n  ATF: 'French Southern Territories (the)',\r\n  GAB: 'Gabon',\r\n  GMB: 'Gambia (the)',\r\n  GEO: 'Georgia',\r\n  DEU: 'Germany',\r\n  GHA: 'Ghana',\r\n  GIB: 'Gibraltar',\r\n  GRC: 'Greece',\r\n  GRL: 'Greenland',\r\n  GRD: 'Grenada',\r\n  GLP: 'Guadeloupe',\r\n  GUM: 'Guam',\r\n  GTM: 'Guatemala',\r\n  GGY: 'Guernsey',\r\n  GIN: 'Guinea',\r\n  GNB: 'Guinea-Bissau',\r\n  GUY: 'Guyana',\r\n  HTI: 'Haiti',\r\n  HMD: 'Heard Island and McDonald Islands',\r\n  VAT: 'Holy See (the)',\r\n  HND: 'Honduras',\r\n  HKG: 'Hong Kong',\r\n  HUN: 'Hungary',\r\n  ISL: 'Iceland',\r\n  IND: 'India',\r\n  IDN: 'Indonesia',\r\n  IRN: 'Iran (Islamic Republic of)',\r\n  IRQ: 'Iraq',\r\n  IRL: 'Ireland',\r\n  IMN: 'Isle of Man',\r\n  ISR: 'Israel',\r\n  ITA: 'Italy',\r\n  JAM: 'Jamaica',\r\n  JPN: 'Japan',\r\n  JEY: 'Jersey',\r\n  JOR: 'Jordan',\r\n  KAZ: 'Kazakhstan',\r\n  KEN: 'Kenya',\r\n  KIR: 'Kiribati',\r\n  PRK: \"Korea (the Democratic People's Republic of)\",\r\n  KOR: 'Korea (the Republic of)',\r\n  KWT: 'Kuwait',\r\n  KGZ: 'Kyrgyzstan',\r\n  LAO: \"Lao People's Democratic Republic (the)\",\r\n  LVA: 'Latvia',\r\n  LBN: 'Lebanon',\r\n  LSO: 'Lesotho',\r\n  LBR: 'Liberia',\r\n  LBY: 'Libya',\r\n  LIE: 'Liechtenstein',\r\n  LTU: 'Lithuania',\r\n  LUX: 'Luxembourg',\r\n  MAC: 'Macao',\r\n  MDG: 'Madagascar',\r\n  MWI: 'Malawi',\r\n  MYS: 'Malaysia',\r\n  MDV: 'Maldives',\r\n  MLI: 'Mali',\r\n  MLT: 'Malta',\r\n  MHL: 'Marshall Islands (the)',\r\n  MTQ: 'Martinique',\r\n  MRT: 'Mauritania',\r\n  MUS: 'Mauritius',\r\n  MYT: 'Mayotte',\r\n  MEX: 'Mexico',\r\n  FSM: 'Micronesia (Federated States of)',\r\n  MDA: 'Moldova (the Republic of)',\r\n  MCO: 'Monaco',\r\n  MNG: 'Mongolia',\r\n  MNE: 'Montenegro',\r\n  MSR: 'Montserrat',\r\n  MAR: 'Morocco',\r\n  MOZ: 'Mozambique',\r\n  MMR: 'Myanmar',\r\n  NAM: 'Namibia',\r\n  NRU: 'Nauru',\r\n  NPL: 'Nepal',\r\n  NLD: 'Netherlands (the)',\r\n  NCL: 'New Caledonia',\r\n  NZL: 'New Zealand',\r\n  NIC: 'Nicaragua',\r\n  NER: 'Niger (the)',\r\n  NGA: 'Nigeria',\r\n  NIU: 'Niue',\r\n  NFK: 'Norfolk Island',\r\n  MNP: 'Northern Mariana Islands (the)',\r\n  NOR: 'Norway',\r\n  OMN: 'Oman',\r\n  PAK: 'Pakistan',\r\n  PLW: 'Palau',\r\n  PSE: 'Palestine, State of',\r\n  PAN: 'Panama',\r\n  PNG: 'Papua New Guinea',\r\n  PRY: 'Paraguay',\r\n  PER: 'Peru',\r\n  PHL: 'Philippines (the)',\r\n  PCN: 'Pitcairn',\r\n  POL: 'Poland',\r\n  PRT: 'Portugal',\r\n  PRI: 'Puerto Rico',\r\n  QAT: 'Qatar',\r\n  MKD: 'Republic of North Macedonia',\r\n  ROU: 'Romania',\r\n  RUS: 'Russian Federation (the)',\r\n  RWA: 'Rwanda',\r\n  REU: 'Réunion',\r\n  BLM: 'Saint Barthélemy',\r\n  SHN: 'Saint Helena, Ascension and Tristan da Cunha',\r\n  KNA: 'Saint Kitts and Nevis',\r\n  LCA: 'Saint Lucia',\r\n  MAF: 'Saint Martin (French part)',\r\n  SPM: 'Saint Pierre and Miquelon',\r\n  VCT: 'Saint Vincent and the Grenadines',\r\n  WSM: 'Samoa',\r\n  SMR: 'San Marino',\r\n  STP: 'Sao Tome and Principe',\r\n  SAU: 'Saudi Arabia',\r\n  SEN: 'Senegal',\r\n  SRB: 'Serbia',\r\n  SYC: 'Seychelles',\r\n  SLE: 'Sierra Leone',\r\n  SGP: 'Singapore',\r\n  SXM: 'Sint Maarten (Dutch part)',\r\n  SVK: 'Slovakia',\r\n  SVN: 'Slovenia',\r\n  SLB: 'Solomon Islands',\r\n  SOM: 'Somalia',\r\n  ZAF: 'South Africa',\r\n  SGS: 'South Georgia and the South Sandwich Islands',\r\n  SSD: 'South Sudan',\r\n  ESP: 'Spain',\r\n  LKA: 'Sri Lanka',\r\n  SDN: 'Sudan (the)',\r\n  SUR: 'Suriname',\r\n  SJM: 'Svalbard and Jan Mayen',\r\n  SWE: 'Sweden',\r\n  CHE: 'Switzerland',\r\n  SYR: 'Syrian Arab Republic',\r\n  TWN: 'Taiwan',\r\n  TJK: 'Tajikistan',\r\n  TZA: 'Tanzania, United Republic of',\r\n  THA: 'Thailand',\r\n  TLS: 'Timor-Leste',\r\n  TGO: 'Togo',\r\n  TKL: 'Tokelau',\r\n  TON: 'Tonga',\r\n  TTO: 'Trinidad and Tobago',\r\n  TUN: 'Tunisia',\r\n  TUR: 'Turkey',\r\n  TKM: 'Turkmenistan',\r\n  TCA: 'Turks and Caicos Islands (the)',\r\n  TUV: 'Tuvalu',\r\n  UGA: 'Uganda',\r\n  UKR: 'Ukraine',\r\n  ARE: 'United Arab Emirates (the)',\r\n  GBR: 'United Kingdom of Great Britain and Northern Ireland (the)',\r\n  UMI: 'United States Minor Outlying Islands (the)',\r\n  USA: 'United States of America (the)',\r\n  URY: 'Uruguay',\r\n  UZB: 'Uzbekistan',\r\n  VUT: 'Vanuatu',\r\n  VEN: 'Venezuela (Bolivarian Republic of)',\r\n  VNM: 'Viet Nam',\r\n  VGB: 'Virgin Islands (British)',\r\n  VIR: 'Virgin Islands (U.S.)',\r\n  WLF: 'Wallis and Futuna',\r\n  ESH: 'Western Sahara',\r\n  YEM: 'Yemen',\r\n  ZMB: 'Zambia',\r\n  ZWE: 'Zimbabwe',\r\n  ALA: 'Åland Islands',\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { countryListAlpha3 } from './contryCode'\r\nimport Loader from './Loader'\r\n\r\nconst CountryDetail = ({ match }) => {\r\n  const [country, setCountry] = useState([])\r\n  const [nativeName, setNativeName] = useState('')\r\n  const [error, setError] = useState(null)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const url = 'https://restcountries.eu/rest/v2/all'\r\n  const url2 = 'https://restcountries.com/v3.1/all'\r\n\r\n  useEffect(() => {\r\n    fetch(url2)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (data) => {\r\n          setIsLoaded(true)\r\n          const SingleData = data.find((a) => a.name.common === match.params.id)\r\n          console.log(SingleData)\r\n          setCountry(SingleData)\r\n          const native =\r\n            typeof Object.values(SingleData.name.nativeName)[1] !== 'undefined'\r\n              ? Object.values(Object.values(SingleData.name.nativeName)[1])[1]\r\n              : Object.values(Object.values(SingleData.name.nativeName)[0])[1]\r\n\r\n          setNativeName(native)\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true)\r\n          setError(error)\r\n        }\r\n      )\r\n  }, [match.params.id])\r\n  if (error) {\r\n    return <>{error.message}</>\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <>\r\n        <Loader />\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className='dark__mode__black'>\r\n        <div className='lg:p-8 pb-8'>\r\n          <div className='p-5 lg:p-8'>\r\n            <Link to='/rest-countries'>\r\n              <button className='lg:m-0 shadow px-4 py-2'>← Back</button>\r\n            </Link>\r\n          </div>\r\n\r\n          {/* <p>Currencies: {country.currencies[0]['code']}</p> */}\r\n\r\n          <div className='flex flex-col lg:flex-row justify-center md:justify-between md:items-center m-5 lg:m-0'>\r\n            <div className='card__image_single w-1/2'>\r\n              <img\r\n                src={country.flags && country.flags.svg}\r\n                alt={country.name && country.name.common}\r\n                className='object-cover w-full rounded shadow'\r\n              />\r\n            </div>\r\n            <div className='right  w-full lg:w-1/2'>\r\n              <h2 className='my-4 text-2xl'>\r\n                <strong>{country.name && country.name.common}</strong>\r\n              </h2>\r\n              <div className='container flex flex-col lg:flex-row justify-between'>\r\n                <div className='boxInner'>\r\n                  <p>\r\n                    <span className='font-semibold'>Native Name: </span>{' '}\r\n                    {nativeName}\r\n                  </p>\r\n                  {/* <p>\r\n                    <span className='font-semibold'>Population: </span>{' '}\r\n                    {country.population}\r\n                  </p> */}\r\n                  <p>\r\n                    <span className='font-semibold'>Region: </span>{' '}\r\n                    {country.region}\r\n                  </p>\r\n                  <p>\r\n                    <span className='font-semibold'>Sub Region: </span>{' '}\r\n                    {country.subregion}\r\n                  </p>\r\n                  <p>\r\n                    <span className='font-semibold'>Capital: </span>{' '}\r\n                    {country.capital}\r\n                  </p>\r\n                </div>\r\n                <div className='boxInner2 my-5 lg:my-0 lg:p-5'>\r\n                  <p>\r\n                    <span className='font-semibold'>Top Level Domain: </span>{' '}\r\n                    {country.tld && country.tld}\r\n                  </p>\r\n                  <p>\r\n                    <span className='font-semibold'>Currencies:</span>{' '}\r\n                    {country.currencies &&\r\n                      Object.values(Object.values(country.currencies)[0])[0]}\r\n                  </p>\r\n                  <p>\r\n                    <span className='font-semibold'>Languages: </span>{' '}\r\n                    {country.languages &&\r\n                      Object.values(country.languages).map((a) => (\r\n                        <span a={Math.random() * 77} className='mr-2'>\r\n                          {a},\r\n                        </span>\r\n                      ))}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='mt-10 lg:flex items-center'>\r\n                <h1>Border Countries:</h1>\r\n                <div className='flex m-0 lg:ml-4 flex-wrap'>\r\n                  {country.borders &&\r\n                    country.borders.map((border) => {\r\n                      return (\r\n                        <button\r\n                          className='px-2 lg:px-4 mr-2 my-2  shadow dark__mode__gray'\r\n                          key={`${Math.random() * 999}`}\r\n                        >\r\n                          {countryListAlpha3[border]}\r\n                        </button>\r\n                      )\r\n                    })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CountryDetail\r\n\r\n/*\r\n  // const {\r\n  //   numericCode,\r\n  //   flag,\r\n  //   name,\r\n  //   nativeName,\r\n  //   population,\r\n  //   region,\r\n  //   subregion,\r\n  //   capital,\r\n  //   topLevelDomain,\r\n  //   currencies,\r\n  //   languages,\r\n  //   borders,\r\n  // } = country\r\n*/\r\n","import './App.css'\nimport Header from './components/Header/Header'\nimport MainPage from './components/MainPage/MainPage'\nimport CountryDetail from './components/MainPage/CountryDetail'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App dark__mode__black h-full'>\n        <Header />\n\n        <div className='container mx-auto '>\n          <Route path='/rest-countries' component={MainPage} exact />\n          {/* <MainPage /> */}\n          <Route path='/details/:id' component={CountryDetail} />\n        </div>\n      </div>\n\n      {/* <Route path='/' exact component={App} /> */}\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}